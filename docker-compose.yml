version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: inbound_travel_assistant_db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./web
    container_name: django_backend
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120
    volumes:
      - static_volume:/app/web/static
      - media_volume:/app/web/media
      - ./web/.env:/app/web/.env  # 挂载 .env 文件
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - SERVER_URL=${SERVER_URL}
      - OCR_API_KEY=${OCR_API_KEY}
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend_network

  nginx:
    build:
      context: ./nginx
    container_name: nginx_proxy
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - static_volume:/app/web/static
      - media_volume:/app/web/media
    networks:
      - backend_network


volumes:
  static_volume:
  media_volume:
  db_data:

networks:
  backend_network:
    driver: bridge
